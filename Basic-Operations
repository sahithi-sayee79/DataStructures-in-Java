package data_struct;

import java.util.Iterator;

public class LinkedList {

	class Node{
		int data;
		Node next;
		
		Node(int data){
			this.data = data;
			this.next = null;
		}
	}
	
	Node head;
	Node currnode;

	public void addFirst(int data) {
		Node newnode = new Node(data);
		
		if(head == null) {
			head = newnode;
			return;
		}
		
		newnode.next = head;
		head = newnode;		
	}
	
	public void addLast(int data) {
		Node newnode = new Node(data);
		currnode = head;
		while(currnode.next != null) {
			currnode = currnode.next;
		}
		currnode.next = newnode;
	}
	
	
	public void printList() {
		if(head == null) {
			System.out.println("List is Empty");
		}
		currnode = head;
		while(currnode != null) {
			System.out.print(currnode.data+"->");
			currnode = currnode.next;	
		}
		System.out.print("NULL");
	}
	
	public void addRandom(int pos, int data) {
		Node newnode = new Node(data);
		currnode = head;
		for (int i=1; i<pos-1;i++) {
			currnode = currnode.next;
		}
		newnode.next = currnode.next;
		currnode.next = newnode;
		
		
	}
	
	public void delFirst() {
		currnode = head;
		head = head.next;
		currnode = null;
	}
	
	public void delLast() {
		currnode = head;
		while (currnode.next.next != null) {
			currnode = currnode.next;
		}
		currnode.next = null;
	}
	
	public void delRandom(int pos) {
		currnode = head;
		for (int i=1; i<pos-1;i++) {
			currnode = currnode.next;
		}
		currnode.next = currnode.next.next;
	}
	
	
	public static void main(String args[]) {
		LinkedList ll = new LinkedList();
		ll.addFirst(9);
		ll.addFirst(7);
		ll.addFirst(5);
		ll.addLast(11);
		ll.addLast(13);
		ll.addLast(15);
		ll.addRandom(2, 3);
		ll.printList();
		System.out.println('\n');
		ll.delFirst();
		ll.delLast();
		ll.printList();
		System.out.println('\n');
		ll.delRandom(2);
		ll.printList();
		
	}

}
